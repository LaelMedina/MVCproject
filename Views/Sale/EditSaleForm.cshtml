@model MVCproyect.Models.Sale;

@{
    Sale currentSale    = ViewBag.currentSale;
    var products        = ViewData["products"] as List<MVCproyect.Models.Product>;
    var paymentMethods  = ViewData["paymentMethods"] as List<MVCproyect.Models.PaymentMethod>;
    var currencies      = ViewData["Currencies"] as List<MVCproyect.Models.Currency>;
    var saleDetails     = currentSale.SaleDetails as List<MVCproyect.Models.SaleDetail>;
    var sellers         = ViewData["Sellers"] as List<MVCproyect.Models.Seller>;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Sale</title>
</head>
<body>

    <div class="container mt-5">

        <header class="text-center mb-4">
            <h1 class="display-4 text-primary">Update Sale</h1>
            <p class="text-muted">Modify the sale details below.</p>
        </header>

        <div class="row justify-content-center mt-4">
            <div class="col-md-8">

                <form asp-action="UpdateSale" method="post" class="p-4 border rounded bg-white shadow-sm" style="max-width: 800px; margin: 0 auto;">

                    <div class="mb-4">
                        <label asp-for="ClientName" class="form-label font-weight-bold">Client Name</label>
                        <input type="text" asp-for="ClientName" class="form-control" value="@currentSale?.ClientName" />
                        <span asp-validation-for="ClientName" class="text-danger"></span>
                    </div>

                    <div class="row">

                        <div class="col-md-8 mb-4">
                            <label asp-for="SellerName" class="form-label font-weight-bold">Seller</label>
                            <select asp-for="SellerName" class="form-select" id="sellerSelect" aria-label="Select Seller">
                                <option value="" disabled selected>Choose Seller...</option>
                                @foreach (Seller seller in sellers)
                                {
                                    <option value="@seller.Name" data-id="@seller.Id">@seller.Name</option>
                                }
                            </select>
                            <span asp-validation-for="SellerName" class="text-danger"></span>
                        </div>

                    </div>

                    <div class="row mb-4">
                        <div class="col-md-8">
                            <label class="form-label font-weight-bold">Sale Content</label>
                            <select asp-for="SaleDetails" id="saleContent" class="form-select" aria-label="Select product">
                                <option value="" disabled selected>Choose product...</option>
                                @foreach (var product in products)
                                {
                                    <option value="@product.Id" data-price="@product.Price">@product.Name</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-2">
                            <label class="form-label font-weight-bold">Total Units</label>
                            <input id="totalUnits" type="number" class="form-control" placeholder="Enter units" min="1" />
                        </div>

                        <div class="col-md-2">
                            <label class="form-label font-weight-bold">Action</label>
                            <button type="button" id="addToCart" class="btn btn-secondary w-100">Add to Cart</button>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-8">
                            <label asp-for="PaymentMethod" class="form-label font-weight-bold">Payment Method</label>
                            <select asp-for="PaymentMethod" class="form-select" aria-label="Select payment method">
                                <option value="@currentSale.PaymentMethod" selected class="text-muted fst-italic">@currentSale.PaymentMethod</option>
                                @foreach (var paymentMethod in paymentMethods)
                                {
                                    <option value="@paymentMethod.Name">@paymentMethod.Name</option>
                                }
                            </select>
                            <span asp-validation-for="PaymentMethod" class="text-danger"></span>
                        </div>

                        <div class="col-md-4">
                            <label asp-for="Currency" class="form-label font-weight-bold">Currency</label>
                            <select asp-for="Currency" class="form-select" aria-label="Select currency">
                                <option value="@currentSale.Currency" selected class="text-muted fst-italic">@currentSale.Currency</option>
                                @foreach (var currency in currencies)
                                {
                                    <option value="@currency.Acronym">@currency.CurrencyName</option>
                                }
                            </select>
                            <span asp-validation-for="Currency" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="Id" class="form-label" hidden></label>
                        <input type="number" value="@currentSale.Id" asp-for="Id" class="form-control" readonly hidden />
                        <input type="hidden" id="totalSale" asp-for="TotalSale" class="form-control" readonly />
                        <input type="hidden" name="CartJson" id="CartJson" />
                    </div>

                    <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-5">
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-sync"></i> Update Sale
                        </button>
                        <a href="@Url.Action("Index")" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Back to List
                        </a>
                    </div>
                </form>

            </div>

            <div id="cartDiv" class="col-md-4 border p-4 shadow-sm bg-white rounded">
                <h3 class="text-primary">Cart</h3>
                <ul id="cartItems" class="list-group mb-3"></ul>
                <h4>Total: <span id="cartTotal">0.00</span></h4>
            </div>

        </div>
    </div>

    <script>
        $(document).ready(function () {


            let cart = [];

        @if (saleDetails != null && saleDetails.Any())
        {
            var saleDetailsJson = System.Text.Json.JsonSerializer.Serialize(saleDetails);
            <text>
                        cart = @Html.Raw(saleDetailsJson);
                                cart.forEach(item => {
                            let price = item.Price || 0;
                        let units = item.Units || 0;
                        let productName = item.ProductName || 'Unknown Product';

                        $('#cartItems').append(
                        `<li class="list-group-item d-flex justify-content-between align-items-center" data-productid="${item.ProductId}">
                            ${productName} - ${units} units x $${price.toFixed(2)}
                            <span>$${(units * price).toFixed(2)}</span>
                            <button class="btn btn-danger btn-sm remove-item">Remove</button>
                        </li>`
                        );
                                });
            </text>
        }

                function updateCartJson() {
                    $('#CartJson').val(JSON.stringify(cart));
                }

            function calculateTotal() {
                let total = 0;
                cart.forEach(item => {
                    let price = item.price || 0;
                    let units = item.units || 0;
                    total += price * units;
                });
                $('#totalSale').val(total.toFixed(2));
                $('#cartTotal').text(total.toFixed(2));
            }

            $('#addToCart').on('click', function () {
                let productId = $('#saleContent option:selected').val();
                let productName = $('#saleContent option:selected').text();
                let price = parseFloat($('#saleContent option:selected').data('price')) || 0;
                let units = parseInt($('#totalUnits').val()) || 0;

                if (productName && units > 0) {
                    const item = { productId, productName, price, units };
                    cart.push(item);

                    $('#cartItems').append(
                        `<li class="list-group-item d-flex justify-content-between align-items-center" data-productid="${item.productId}">
                            ${item.productName} - ${item.units} units x $${item.price.toFixed(2)}
                            <span>$${(item.units * item.price).toFixed(2)}</span>
                            <button class="btn btn-danger btn-sm remove-item">Remove</button>
                        </li>`
                    );

                    calculateTotal();
                    updateCartJson();
                    $('#totalUnits').val('');
                } else {
                    alert("Please select a product and enter valid units.");
                }
            });

            $(document).on('click', '.remove-item', function () {
                const productId = $(this).closest('li').data('productid');
                cart = cart.filter(item => item.productId !== productId);
                $(this).closest('li').remove();
                calculateTotal();
                updateCartJson();
            });

            $('form').on('submit', function (event) {
                if (cart.length === 0) {
                    event.preventDefault();
                    alert("Please add at least one item to the cart before submitting.");
                } else {
                    updateCartJson();
                }
            });

        });

    </script>
</body>
</html>
