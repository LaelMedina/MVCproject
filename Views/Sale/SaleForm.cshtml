@model MVCproyect.Models.Sale;

@{
    var products = ViewData["products"] as List<MVCproyect.Models.Product>;
    var paymentMethods = ViewData["paymentMethods"] as List<MVCproyect.Models.PaymentMethod>;
}

<!DOCTYPE html>
<html>
<head>
    <title>Sales History</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>

    <div class="container mt-5">


        <header class="text-center mb-4">
            <h1>Insert Sale</h1>
        </header>

        <form asp-controller="Sale" asp-action="Create" method="post" class="p-3">

            <div class="form-group">
                <label asp-for="ClientName" class="control-label">Client Name</label>
                <input type="text" asp-for="ClientName" class="form-control" />
                <span asp-validation-for="ClientName" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-8">

                    <div class="form-group">
                        <label asp-for="SaleContent" class="control-label">Sale Content</label>
                        <select asp-for="SaleContent" id="saleContent" class="form-select" aria-label="Default select example">
                            <option selected>Open this select menu</option>
                            @foreach (Product product in products)
                            {
                                <option value="@product.Name" data-id="@product.Id" data-price="@product.Price">@product.Name</option>
                            }

                        </select>
                        <span asp-validation-for="SaleContent" class="text-danger"></span>
                    </div>

                </div>

                <div class="col-md-4">
                    
                    <div class="form-group">
                        <label asp-for="TotalUnits" class="control-label"> Total Units</label>
                        <input id="totalUnits" type="number" asp-for="TotalUnits" class="form-control" />
                        <span asp-validation-for="TotalUnits" class="text-danger"></span>
                    </div>

                </div>
            </div>

            <div class="form-group">
                <label asp-for="PaymentMethod" class="control-label"> Payment Method</label>
                <select asp-for="PaymentMethod" class="form-select" aria-label="Default select example">
                    <option selected>Open this select menu</option>

                    @foreach (PaymentMethod paymentMethod in paymentMethods)
                    {
                        <option value="@paymentMethod.Name">@paymentMethod.Name</option>
                    }

                </select>
                <span asp-validation-for="PaymentMethod" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="TotalSale" class="control-label">Total Sale</label>
                <input type="text" id="totalSale" asp-for="TotalSale" class="form-control" readonly/>
            </div>

            <div class="form-group">
                <label asp-for="ProductSoldId" class="control-label" hidden/>
                <input type="number" id="productSoldId" asp-for="ProductSoldId" class="form-control" readonly hidden/>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </form>

        <a href="@Url.Action("Index")">Back to List</a>

    </div>

    <script>
        $(document).ready(function () {

            function calculateTotal() {
                var price = parseFloat($('#saleContent option:selected').data('price')) || 0;
                var units = parseInt($('#totalUnits').val()) || 0;
                var total = price * units;
                $('#totalSale').val(total.toFixed(2));
            }

            function fnGetProductSoldId() {
                var productId = parseInt($('#saleContent option:selected').data('id'));
                $('#productSoldId').val(productId);
            }

            $('#saleContent, #totalUnits').on('change keyup', function() {
                calculateTotal();
                fnGetProductSoldId();
            });
        });
    </script>

</body>
</html>
